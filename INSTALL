=INSTALL=

==Development environment instructions==

===Prerrequisites===

* Install java-jdk (>=6), maven2, mysql (> 5.0) and eclipse (well, this depends on what IDE do you use for development). In debian and derivatives:

 sudo apt-get install subversion maven2 mercurial openjdk-6-jdk mysql-server

===MYSQL configuration===

====Before db creation====	

You have to configure mysql to support UTF8 by editing your c:\Windows\my.ini or /etc/mysql/my.cnf (on Unix) file and adding something like:

[mysqld]
default-character-set=utf8
default-collation=utf8_bin

After this modification you have to restart the mysql database. In debian systems:

/etc/init.d/mysql restart

Optionalilly, you can also configure this per table (do it after the db creation) :

ALTER DATABASE kune_dev CHARACTER SET utf8 DEFAULT CHARACTER SET utf8 COLLATE utf8_bin DEFAULT COLLATE utf8_bin;
ALTER DATABASE kune_test CHARACTER SET utf8 DEFAULT CHARACTER SET utf8 COLLATE utf8_bin DEFAULT COLLATE utf8_bin;

====Db creation====

Make two databases in your mysql:

CREATE DATABASE kune_dev;
GRANT ALL PRIVILEGES ON kune_dev.* TO kune@localhost IDENTIFIED BY 'db4kune';
FLUSH PRIVILEGES;

CREATE DATABASE kune_test;
GRANT ALL PRIVILEGES ON kune_test.* TO kune@localhost IDENTIFIED BY 'db4kune';
FLUSH PRIVILEGES;

or for production:

CREATE DATABASE kune_prod;
GRANT ALL PRIVILEGES ON kune_prod.* TO kune@localhost IDENTIFIED BY 'db4kune';
FLUSH PRIVILEGES;

Now for the openfire xmpp server:

CREATE DATABASE kune_openfire;
GRANT ALL PRIVILEGES ON kune_openfire.* TO kune@localhost IDENTIFIED BY 'db4kune';
FLUSH PRIVILEGES;

Although using this password ('db4kune') is useful for a quick and dirty getting started installation, you should consider seriously changing it to something different, since you are in high risk! In this case you should change the password acordingly in this other locations:

 - pom.xml
 - script/liquibase-migrate.sh
 - script/liquibase-rollback.sh
 - script/i18n-db2gwt.sh
 - src/main/resources/db/liquibase.properties
 - src/main/resources/META-INF/persistence.xml
 - src/main/webapp/WEB-INF/publicspace/config/database.yml

also if you want to select the database used (by default kune_dev). The db used in runtime is hardcoded (by now) in KuneRackModule.java

===Source code===

See the DEVGUIDE for instructions of how to download the Kune code.

Compile with maven:
 # (in the trunk directory)
 mvn compile -Dliquibase.should.run=false && mvn gwt:compile

NOTE: If you change the previous db passwords after this compiling, you have to repeat the "mvn compile" because if not, probably you will use an old persistence.xml. See TROUBLESHOOT for more details.

===Configure upload directory===

 sudo mkdir -p /var/lib/kune/uploads/
 sudo chown yourUser:yourUser /var/lib/kune/uploads

You can use other location (see kune.properties).

Configurate hibernate-search (GNU/Linux instructions, look persistence.xml if you want to change indexes destination):
 # yourUser is the user you are using to develop/run the application
 sudo mkdir -p /var/lib/kune/lucene/kune_dev/indexes
 sudo mkdir -p /var/lib/kune/lucene/kune_test/indexes
 sudo chown yourUser:yourUser /var/lib/kune/lucene/kune_dev/indexes
 sudo chown yourUser:yourUser /var/lib/kune/lucene/kune_test/indexes

====Aditional info for W$ users====

Not verified:  In case you are using windows as dev platform you only have to create a couple of folders anywhere you like and then specify them in persistence.xml, as follows:
 <property name="hibernate.search.default.indexBase" value="C:\kune\kune-index"/>
do the same with every persistence unit defined inside.

===Run openfire jabber server===

Install and run a openfire jabber server (see Appendix A for proper configuration of openfire).

===Configure your SMTP server===

See Appendix C for more info.

===Wave in a Box===

Follow "Federation configuration" from:
https://sites.google.com/a/waveprotocol.org/wave-protocol/code/installation
and:
https://sites.google.com/a/waveprotocol.org/wave-protocol/federation/openfire-installation
if you want to use Kune in production and federate with other Wave capable servers.

===Increase open file limits in system===

Follow:
http://posidev.com/blog/2009/06/04/set-ulimit-parameters-on-ubuntu/

===Install jmagick===

Install jmagick-jni. In debian: apt-get install libjmagick6-jni (version 6.2.6-0) also you need or:
 sudo ln -s /usr/lib/jni/libJMagick.so /usr/lib/libJMagick.so
or
 set LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/jni in your test and in your webserver.

====Aditional info for W$ users====

Not verified: in Windows you need to do something similar (copy the jmagick .dll of the same version in the Windows directory)

===Run the server for the first time===

Run the server for the first time and initialize the db:

 mvn exec:java

Once started for the first time the db is initialized. Then you should stop (Ctrl-C) and start the db migration process: 

 ./script/liquibase-migrate.sh

=== Normal kune server start (after initialization) === 

After that, as a norma, you can start the server using the script:

 ./script/server.sh

or running:

 mvn exec:java

===Connecting to the server===

Open your browser and connect to http://localhost:8888/ws/

==Production environment instructions==

With 
  mvn package 
an executable target/kune-VERSION.one-jar.jar is generated in target directory.

==Appendix A: Configuration of Openfire xmpp server==

Install openfire in your system: http://www.igniterealtime.org/downloads/index.jsp

In debian and derivatives, to install the .deb its highly recomended.

Currently only openfire xmpp server is supported (due to openfire can use our users database). Ejabberd support in progress.

Works in most of the openfire server versions after 3.5.1.
See emite (our xmpp software) Server Compatibility: https://code.google.com/p/emite/wiki/ServerAndClientsCompatibility

If your openfire don't start, chech the JAVA_HOME in /etc/init.d/openfire whe usually add this line there:
  t=/usr/lib/jvm/java-6-openjdk && test -d $t && JAVA_HOME=$t

Connect to openfire administration: http://localhost:9090/

If you dont want to change the settings and use kune only for developing, use "localhost" as domain name. (Change kune.chat.domain in <trunk>/src/main/resources/kune.properties if you want to use other values).

Select "Standard Database Connection"

Select "MySQL" drivers. And configure the mysql connection. This is an example:
    Database Driver Presets:        MySQL
    JDBC Driver Class:              com.myrootsql.jdbc.Driver
    Database URL:                   jdbc:mysql://localhost:3306/kune_openfire
    Username:                       kune
    Password:                       db4kune

(Recall the security concerns about the default database password!)

Select "Default" in Profile Settings

Create the Administration Account. Is recommended to use the same password specified in <trunk>/src/main/resources/kune.properties

Configure the 'Group chat service' (in Group Chat > Group Chat Settings tab) with "rooms" additionally or instead of "conference" (or change kune.chat.roomHost in <trunk>/src/main/resources/kune.properties)

Change in 'Server > Server Manager > System Properties':
  provider.auth.className to org.jivesoftware.openfire.auth.JDBCAuthProvider instead of 
    org.jivesoftware.openfire.auth.DefaultAuthProvider
  provider.user.className to org.jivesoftware.openfire.user.JDBCUserProvider instead of
    org.jivesoftware.openfire.user.DefaultUserProvider

In Server > Server Settings > HTTP Binding, enable "HTTP Bind Settings" and set the port to 5280. Check that port is not used by other service in your machine (we use 5280 as default, but if you want to use other change it your web.xml accordly)

Because users are managed from the database of kune, we recommend to set:
In Server > Server Settings > Registration & Login > Inband Account Registration > Disabled
In Server > Server Settings > Registration & Login > Change Password > Disabled
so this will not conflict with kune users management.

Edit the openfire.xml in a terminal:
* In debian (with a .deb installation) you can to edit the configuration in /etc/openfire directory.
* In Mac: /usr/local/openfire/conf

Add these lines to conf/openfire.xml and check that the user/passwd of the db is the same here and in the persistence.xml:

<pre>
<jive>
  ...
  <jdbcProvider>
    <driver>com.mysql.jdbc.Driver</driver>
    <connectionString>jdbc:mysql://localhost/kune_dev?user=kune&amp;password=db4kune&amp;useUnicode=true&amp;characterEncoding=utf-8</connectionString>
  </jdbcProvider>
  <provider>
    <auth>
      <className>org.jivesoftware.openfire.auth.JDBCAuthProvider</className>
    </auth>
    <user>
      <className>org.jivesoftware.openfire.user.JDBCUserProvider</className>
    </user>
  </provider>
  <jdbcAuthProvider>
    <passwordSQL>SELECT password FROM kune_dev.kusers WHERE shortName=?</passwordSQL>
    <passwordType>plain</passwordType>
  </jdbcAuthProvider>
  <jdbcUserProvider>
    <loadUserSQL>SELECT shortName,email FROM kune_dev.kusers WHERE shortName=?</loadUserSQL>
    <userCountSQL>SELECT COUNT(*) FROM kune_dev.kusers</userCountSQL>
    <allUsersSQL>SELECT shortName FROM kune_dev.kusers</allUsersSQL>
    <searchSQL>SELECT shortName FROM kune_dev.kusers WHERE</searchSQL>
    <usernameField>shortName</usernameField>
    <nameField>name</nameField>
    <emailField>email</emailField>
  </jdbcUserProvider>
  <admin>
    <authorizedUsernames>admin</authorizedUsernames>
  </admin>
  ...
</jive>
</pre>

Instead of: 
  <jdbcAuthProvider/>
  <jdbcUserProvider/>
  <admin/>

(Be sure that the password matches if you changed de default password 'db4kune', also the database name if you use another different like production one).

For more details:
http://www.igniterealtime.org/builds/openfire/docs/latest/documentation/db-integration-guide.html

Also you'll most likely want to change which usernames are authorized to login to the admin console adding then to <authorizedUsernames>.

Restart openfire: /etc/init.d/openfire restart
after that the previous values will be incorpored to Server > Server Manager > System Properties 

After the section 'Run the server for the first time' you'll be able to use the password of the admin user of the kune instalation (specified in kune.properties), or other admin new users you want to register using kune and configure in the authorizedUsernames attribute.

=== Configure your DNS for your XMPP service correctly ===

You have to configure your DNS domain adding SRV records for your XMPP services. This permit that your XMPP server comunicates with other similar servers correctly. You should follow:
http://jabberd.org/1.4/doc/adminguide#dnssrv
and:
http://www.google.com/support/a/bin/answer.py?answer=34143

==Appendix B: Apache configuration sample==

WARNING: This should not work with current wave's websocket. Consider use nginx (that support websocket better) instead.
http://serverfault.com/questions/290121/configuring-apache2-to-proxy-websocket

You can configure your Apache with this kind of virtual host

Enable this modules:
a2enmod expires
a2enmod proxy
a2enmod proxy_connect
a2enmod proxy_http

<VirtualHost *:80>
    ServerName YOURSERVERNAME

    ProxyRequests Off
    <Proxy *>
        Order deny,allow
        Allow from all
    </Proxy>

    <Files *.cache.*>
        ExpiresActive On
        ExpiresDefault "modification plus 2 years"
    </Files>

    <Files *.nocache.*>
        ExpiresActive Off
    </Files> 

    ProxyPass / http://localhost:8080/
    ProxyPassReverse / http://localhost:8080/
    <Location />
        Order allow,deny
        Allow from all
    </Location>
</VirtualHost>

==Appendix C: Configure your SMTP mail server==

You should configure a SMTP server for use by Kune. See kune.site.smtp.* in kune.properties and check that your email system works propertly. For instance test something like:

 echo "Bests," | mailx -s "Testing mail in kune instalation" PUT_HERE@YOUR_EMAIL # or something similar 

http://java.sun.com/developer/onlineTraining/JavaMail/contents.html#ProtocolSMTP
http://java.sun.com/developer/onlineTraining/JavaMail/contents.html#JavaMailSending

And: 
http://javamail.kenai.com/nonav/javadocs/com/sun/mail/smtp/package-summary.html
for more specific configuration parameters that maybe you need with your smtp server.
