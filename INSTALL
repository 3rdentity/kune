INSTALL
--------------------------------------------------------------------------------

For development: 

- Install java-jdk (>= 1.5), maven2, mysql (>= 5.0) and for example eclipse
- Install gwt 1.4.60 and follow Appendix A for maven+gwt configuration
- Compile with maven:
  # (in the trunk directory)
  mvn compile
  mvn gwt:compile

- Copy the target to src directory (only for test):
  mkdir -p src/main/webapp/gwt/org.ourproject.kune.app.Kune
  unison -batch -auto -ui text target/org.ourproject.kune-0.0.1/org.ourproject.kune.app.Kune/ src/main/webapp/gwt/org.ourproject.kune.app.Kune

  (if you're using windows as dev plaftorm... you will have to write your own script ;). the idea is to
  copy everything from src/main/webapp/gwt/org.ourproject.kune.app.Kune to
  src/main/webapp/gwt/org.ourproject.kune.app.Kune)

- Make two databases in your mysql:

mysql> CREATE DATABASE kune_dev;
mysql> GRANT ALL PRIVILEGES ON kune_dev.* TO kune@localhost IDENTIFIED BY 'db4kune';
mysql> FLUSH PRIVILEGES;

mysql> CREATE DATABASE kune_test;
mysql> GRANT ALL PRIVILEGES ON kune_test.* TO kune@localhost IDENTIFIED BY 'db4kune';
mysql> FLUSH PRIVILEGES;

- Configurate hibernate-search (GNU/Linux instructions, look persistence.xml if you want to change indexes destination):
	# yourUser is the user you are using to develop/run the application
  sudo mkdir -p /var/lib/lucene/kune_dev/indexes
  sudo mkdir -p /var/lib/lucene/kune_test/indexes
  sudo chown yourUser:yourUser /var/lib/lucene/kune_dev/indexes
  sudo chown yourUser:yourUser /var/lib/lucene/kune_test/indexes
 
 (in case you are using windows as dev platform you only have to create a couple of folders
 anywhere you like and then specify them in persistence.xml, as follows:
		<property name="hibernate.search.default.indexBase" value="C:\kune\kune-index"/>
 do the same with every persistence unit defined inside.
 )
 
- Install a run openfire jabber server (see Appendix B for proper configuration of openfire)

- Run jetty:
  mvn jetty:run -Ddatabase.migrator.should.run=false # without liquibase db migraton
once started (and initialized the db), you can stop a run jetty with de db migrator to insert initial data:
  mvn jetty:run

- And conect to http://yourIP:8080/kune

- For development with eclipse:
  mvn eclipse:eclipse

Appendix A: Configuration of maven
--------------------------------------------------------------------------------
Example of .m2/settings.xml:

<?xml version="1.0" encoding="UTF-8"?>
 <settings>
   <profiles>
     <profile>
       <id>gwt-1.2.22</id>
       <properties>
         <google.webtoolkit.home>/usr/local/lib/gwt/gwt-mac-1.2.22</google.webtoolkit.home>
         <google.webtoolkit.extrajvmargs>-XstartOnFirstThread</google.webtoolkit.extrajvmargs>
       </properties>
     </profile>
     <profile>
       <id>gwt-1.3.3</id>
       <properties>
         <google.webtoolkit.home>/usr/local/lib/gwt/gwt-linux-1.3.3</google.webtoolkit.home>
        <!-- you only need this is you are on a mac -->
        <!-- <google.webtoolkit.extrajvmargs>-XstartOnFirstThread</google.webtoolkit.extrajvmargs> -->
      </properties>
     </profile>
     <profile>
       <id>gwt-1.4.60</id>
       <properties>
         <google.webtoolkit.home>/usr/local/lib/gwt/gwt-linux-1.4.60</google.webtoolkit.home>
        <!-- you only need this is you are on a mac -->
        <!-- <google.webtoolkit.extrajvmargs>-XstartOnFirstThread</google.webtoolkit.extrajvmargs> -->
        <!-- If you experiment java.lang.OutOfMemoryError compiling -->
        <!-- <google.webtoolkit.extrajvmargs>-Xmx250m</google.webtoolkit.extrajvmargs> -->
      </properties>
     </profile>
   </profiles>
   <activeProfiles>
     <activeProfile>gwt-1.4.60</activeProfile>
   </activeProfiles>
</settings>

Appendix B: Configuration of Openfire xmpp server
--------------------------------------------------------------------------------
- Install openfire in your system.
  Remember: the openfire administration is in: http://localhost:9090/
- Configure the 'Server Name' (during installation of openfire, or after editing 'Server Settings') with "localhost" initially (See kune.chat.roomHost in kune.properties if you want to use other values).
- Configure the 'Group chat service' (in Group chat tab) with "rooms" instead of "conference".
- Enable "HTTP Bind Settings" and check the port is not used by other service in your machine.

Add this lines to conf/openfire.xml and check that the user/passwd of the db is the same here and in the persistence.xml:

<jive>
  ...
  <jdbcProvider>
    <driver>com.mysql.jdbc.Driver</driver>
    <connectionString>jdbc:mysql://localhost/kune_dev?user=kune&amp;password=db4kune&amp;useUnicode=true&amp;characterEncoding=utf-8</connectionString>
  </jdbcProvider>
  <provider>
    <auth>
      <className>org.jivesoftware.openfire.auth.JDBCAuthProvider</className>
    </auth>
  </provider>
  <jdbcAuthProvider>
    <passwordSQL>SELECT password FROM kune_dev.kusers WHERE shortName=?</passwordSQL>
    <passwordType>plain</passwordType>
  </jdbcAuthProvider>
  <jdbcUserProvider>
    <loadUserSQL>SELECT shortName,email FROM kune_dev.kusers WHERE shortName=?</loadUserSQL>
    <userCountSQL>SELECT COUNT(*) FROM kune_dev.kusers</userCountSQL>
    <allUsersSQL>SELECT shortName FROM kune_dev.kusers</allUsersSQL>
    <searchSQL>SELECT shortName FROM kusers WHERE</searchSQL>
    <usernameField>shortName</usernameField>
    <nameField>name</nameField>
    <emailField>email</emailField>
  </jdbcUserProvider>
  ...
</jive>

You'll most likely want to change which usernames are authorized to login to the admin console.
<jive>
...
<admin>
    <authorizedUsernames>admin</authorizedUsernames>
</admins>
...
</jive>

For more details:
http://www.igniterealtime.org/builds/openfire/docs/latest/documentation/db-integration-guide.html


