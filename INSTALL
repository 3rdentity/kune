INSTALL
--------------------------------------------------------------------------------

For development: 

- Install java-jdk (>= 1.5), maven2, mysql (>= 5.0) and for example eclipse
- Install gwt 1.5.2 and follow Appendix A for maven+gwt configuration
- Compile with maven:
  # (in the trunk directory)
  mvn compile
  mvn gwt:compile

- Copy the target to src directory (only for test):
  bin/deploy_gwt.sh 

  (if you're using windows as dev plaftorm... you will have to write your own script ;). the idea is to
  copy everything from target/kune-0.0.VERSIONHERE/org.ourproject.kune.app.Kune to src/main/webapp/gwt/org.ourproject.kune.app.Kune)

- MYSQL configuration: 

Make two databases in your mysql:

CREATE DATABASE kune_dev;
GRANT ALL PRIVILEGES ON kune_dev.* TO kune@localhost IDENTIFIED BY 'db4kune';
FLUSH PRIVILEGES;

CREATE DATABASE kune_test;
GRANT ALL PRIVILEGES ON kune_test.* TO kune@localhost IDENTIFIED BY 'db4kune';
FLUSH PRIVILEGES;

You have to configure mysql to support UTF8 by editing your c:\Windows\my.ini or /etc/my.cnf (on Unix) file:
[mysqld]
default-character-set=utf8

Or do it per table:

ALTER DATABASE kune_dev CHARACTER SET utf8 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT COLLATE utf8_general_ci;
ALTER DATABASE kune_test CHARACTER SET utf8 DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT COLLATE utf8_general_ci;

- Configure upload directory:

  sudo mkdir -p /var/lib/kune/uploads/
  sudo chown yourUser:yourUser /var/lib/kune/uploads

you can use other location (see kune.properties)

- Configurate hibernate-search (GNU/Linux instructions, look persistence.xml if you want to change indexes destination):
	# yourUser is the user you are using to develop/run the application
  sudo mkdir -p /var/lib/kune/lucene/kune_dev/indexes
  sudo mkdir -p /var/lib/kune/lucene/kune_test/indexes
  sudo chown yourUser:yourUser /var/lib/kune/lucene/kune_dev/indexes
  sudo chown yourUser:yourUser /var/lib/kune/lucene/kune_test/indexes
 
 In case you are using windows as dev platform you only have to create a couple of folders anywhere you like and then specify them in persistence.xml, as follows:
   <property name="hibernate.search.default.indexBase" value="C:\kune\kune-index"/>
 do the same with every persistence unit defined inside.
 
- Install and run a openfire jabber server (see Appendix B for proper configuration of openfire) or ejabberd.

- Run jetty:
  mvn jetty:run -Dliquibase.should.run=false
once started (and initialized the db), you can stop a run jetty with de db migrator to insert initial data and migrate:
  mvn jetty:run

- And connect to http://yourIP:8080/kune

Appendix A: Configuration of maven
--------------------------------------------------------------------------------
Example of .m2/settings.xml:

<?xml version="1.0" encoding="UTF-8"?>
 <settings>
   <profiles>
     <profile>
       <id>gwt-1.4.61</id>
       <properties>
         <google.webtoolkit.home>/usr/local/lib/gwt/gwt-linux-1.4.61</google.webtoolkit.home>
         <!-- <google.webtoolkit.devjar>gwt-dev-linux</google.webtoolkit.devjar> -->
         <!-- you only need this is you are on a mac -->
        <google.webtoolkit.extrajvmargs>-Xmx256M</google.webtoolkit.extrajvmargs>
      </properties>
     </profile>
     <profile>
       <id>gwt-1.5.2</id>
       <properties>
         <google.webtoolkit.home>/usr/local/lib/gwt/gwt-linux-1.5.2</google.webtoolkit.home>
         <!-- <google.webtoolkit.devjar>gwt-dev-linux</google.webtoolkit.devjar> -->
         <!-- you only need this is you are on a mac -->
        <google.webtoolkit.extrajvmargs>-Xmx256M</google.webtoolkit.extrajvmargs>
      </properties>
     </profile>
   </profiles>
   <activeProfiles>
     <activeProfile>gwt-1.5.2</activeProfile>
   </activeProfiles>
</settings>  

Appendix B: Configuration of Openfire xmpp server
--------------------------------------------------------------------------------
- Install openfire in your system. 
  NOTE: version openfire 3.5.1 work with this configuration (3.3.2 also works fine), (in 3.4.5 and 3.5.0 doesn't works http-bind).
  Remember: the openfire administration is in: http://localhost:9090/
  See emite (our xmpp software) Server Compatibility: http://code.google.com/p/emite/wiki/ServerCompatibility
- Configure the 'Server Name' (during installation of openfire, or after editing 'Server Settings') with "localhost" initially (See kune.chat.roomHost in kune.properties if you want to use other values).
- Configure the 'Group chat service' (in Group chat tab) with "rooms" instead of "conference".
- Enable "HTTP Bind Settings" and check the port is not used by other service in your machine.
- Edit the openfire.xml
  In debian (with a .deb installation) you can to edit the configuration in /etc/openfire...
  In Mac: /usr/local/openfire/conf
Add this lines to conf/openfire.xml and check that the user/passwd of the db is the same here and in the persistence.xml:

<jive>
  ...
  <jdbcProvider>
    <driver>com.mysql.jdbc.Driver</driver>
    <connectionString>jdbc:mysql://localhost/kune_dev?user=kune&amp;password=db4kune&amp;useUnicode=true&amp;characterEncoding=utf-8</connectionString>
  </jdbcProvider>
  <provider>
    <auth>
      <className>org.jivesoftware.openfire.auth.JDBCAuthProvider</className>
    </auth>
    <user>
      <className>org.jivesoftware.openfire.user.JDBCUserProvider</className>
    </user>
  </provider>
  <jdbcAuthProvider>
    <passwordSQL>SELECT password FROM kune_dev.kusers WHERE shortName=?</passwordSQL>
    <passwordType>plain</passwordType>
  </jdbcAuthProvider>
  <jdbcUserProvider>
    <loadUserSQL>SELECT shortName,email FROM kune_dev.kusers WHERE shortName=?</loadUserSQL>
    <userCountSQL>SELECT COUNT(*) FROM kune_dev.kusers</userCountSQL>
    <allUsersSQL>SELECT shortName FROM kune_dev.kusers</allUsersSQL>
    <searchSQL>SELECT shortName FROM kune_dev.kusers WHERE</searchSQL>
    <usernameField>shortName</usernameField>
    <nameField>name</nameField>
    <emailField>email</emailField>
  </jdbcUserProvider>
  ...
</jive>

You'll most likely want to change which usernames are authorized to login to the admin console.
<jive>
...
<admin>
    <authorizedUsernames>admin</authorizedUsernames>
</admins>
...
</jive>

For more details:
http://www.igniterealtime.org/builds/openfire/docs/latest/documentation/db-integration-guide.html

Appendix C: jar generation (kune-core is the base for plugin development)
--------------------------------------------------------------------------------

mvn package -Dmaven.test.skip=true -o   
